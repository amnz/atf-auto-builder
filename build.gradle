apply plugin: 'java'
apply plugin: 'eclipse'

task wrapper(type: Wrapper) { gradleVersion = '1.12' }
defaultTasks 'clean', 'build'

sourceCompatibility = 1.7
archivesBaseName = 'atf-auto-builder'



// Eclipse ///////////////////////////////////////////////////////////////////////////////////////////////////

eclipse.classpath.file.whenMerged { classpath ->
	classpath.entries.findAll { entry -> entry.kind == 'output'              }*.path   = 'build/classes/main'
	classpath.entries.findAll { entry -> entry.path == 'java/test/src'       }*.output = 'build/classes/test'
	classpath.entries.findAll { entry -> entry.path == 'java/test/resources' }*.output = 'build/classes/test'
}

eclipse.project.file.whenMerged { project ->
	project.natures.add(0, 'org.springsource.ide.eclipse.gradle.core.nature')
	project.natures += 'eclihx.core.haxenature'
}



// Java //////////////////////////////////////////////////////////////////////////////////////////////////////

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

jar {
	manifest {
		attributes("Implementation-Title": archivesBaseName
				 , "Implementation-Version": "0.0.1"
				 , "Main-Class":"jp.wda.aab.Bootstrap")
	}
}



repositories {
	mavenCentral()
}

sourceSets {
	main {
		java {
			srcDir 'java/main/src'
		}

		resources {
			srcDir 'java/main/resources'
		}
	}

	test {
		java {
			srcDir 'java/test/src'
		}

		resources {
			srcDir 'java/test/resources'
		}
	}
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.5'
	compile 'org.eclipse.jgit:org.eclipse.jgit:3.5.0.201409260305-r'
	compile 'org.eclipse.jgit:org.eclipse.jgit.java7:3.5.0.201409260305-r'

	compile 'commons-io:commons-io:2.2'

	// jUnit Test
	testCompile 'com.googlecode.jmockit:jmockit:1.6'
	testCompile 'junit:junit:4.11'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
}


task copyLibs(type : Copy) {
	configurations.compile.each {
		from it.toString()
		into 'distribute/libs'
		exclude {
			new File('distribute/libs', it.name).exists()
		}
	}
}
